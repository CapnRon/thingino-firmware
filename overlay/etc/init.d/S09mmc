#!/bin/sh

MMC_SOC_FAMILY=$(ipcinfo -f)
MMC_SOC_SUBVAR=$(ipcinfo -c)

MMC_MODULE="jzmmc_v12"

MMC_GPIO_CD=$(fw_printenv -n gpio_mmc_cd)
MMC_GPIO_PWR=$(fw_printenv -n gpio_mmc_power)

# Default CD-PIN for Ingenic PB27 (GPIO59)
[ -z "$MMC_GPIO_CD" ] && MMC_GPIO_CD="59"

check_return() {
	if [ $? -ne 0 ]; then
		echo "err: $1"
		exit 1
	fi
}

set_gpios() {
        # Set addtional MMC GPIOs
        # This needs to run AFTER the driver has been loaded for thw sd card to mount during boot
        if [ ${#MMC_GPIO_PWR} -eq 3 ] && [ "${MMC_GPIO_PWR%[oO]}" != "$MMC_GPIO_PWR" ]; then
                case "${MMC_GPIO_PWR#??}" in
                        "O") gpio set ${MMC_GPIO_PWR%[oO]} ;;
                        "o") gpio clear ${MMC_GPIO_PWR%[oO]} ;;
                esac
        fi
}

start() {
	printf "Starting MMC: "

	MMC_PARAM="cd_gpio_pin=$MMC_GPIO_CD"

	# Check if MDIO directory exists
	if [ -d /proc/jz/mdio ]; then
		echo "/proc/jz/mdio directory exists!"
		exit 1
	else
		case "$MMC_SOC_FAMILY" in
			t20 | t10 | t21 | t30 | t40 | t41)
				# do nothing
				;;
			t31)
				if [ "$MMC_SOC_SUBVAR" = "t31a" ] || [ "$MMC_SOC_SUBVAR" = "t31al" ]; then
					echo "Skipping GPIO setup for $MMC_SOC_SUBVAR"
					return 1
				else
					gpio-diag pb08 func 1 drive 2
					gpio-diag pb09 func 1 drive 1
					gpio-diag pb10 func 1 drive 1
					gpio-diag pb11 func 1 drive 1
					gpio-diag pb13 func 1 drive 1
					gpio-diag pb14 func 1 drive 1
				fi
				;;
			t23)
				echo "Unsupported: T23"
				exit 1
				;;
			*)
				echo "Unsupported SOC type: $MMC_SOC_FAMILY"
				exit 1
				;;
		esac
	fi

	if grep -q "$MMC_MODULE" /proc/modules; then
		echo "$MMC_MODULE is already loaded"
		exit 1
	else
		echo modprobe $MMC_MODULE ${MMC_PARAM}
		if modprobe $MMC_MODULE ${MMC_PARAM}; then
			set_gpios
			echo "OK"
		else
			echo "FAIL"
			exit 1
		fi
	fi
}

case "$1" in
	start)
		$1
		;;
	stop)
		;;
	reload | restart)
		stop
		sleep 1
		start
		;;
esac

exit 0
