#!/bin/sh

KMOD_PATH=/lib/modules/$(uname -r)/ingenic
SOC=$(ipcinfo -f || fw_printenv -n soc)

echo 1 >/proc/sys/vm/overcommit_memory

check_return() {
	if [ $? -ne 0 ]; then
		echo err: $1
		echo exit
		exit
	fi
}

log() {
	logger -s -p daemon.info -t ingenic "$1"
}

if ! grep -q "^sinfo" /proc/modules; then
	insmod ${KMOD_PATH/%\//}/sinfo.ko
	check_return "insmod sinfo"
fi

if fw_printenv -n sensor >/dev/null; then
	export SENSOR=$(fw_printenv -n sensor)
	log "Get data from environment and set SENSOR as ${SENSOR}"
else
	echo 1 >/proc/jz/sinfo/info
	check_return "start sinfo"
	SENSOR_INFO=$(cat /proc/jz/sinfo/info)
	check_return "get sensor type"
	SENSOR=${SENSOR_INFO#*:}
	if [ "sensor not found" = "$SENSOR" ]; then
		unset SENSOR
		fw_setenv sensor
	else
		log "Get data from sinfo and set SENSOR as ${SENSOR}"
		fw_setenv sensor $SENSOR && log "Write detected ${SENSOR} to U-Boot ENV"
	fi
fi

case "$SENSOR" in
	*)
		ISP_PARAM=""
		SENSOR_PARAM=""
		;;
esac

echo --------------------
echo "ISP_PARAM: ${ISP_PARAM}"
echo "SENSOR: ${SENSOR}"
echo "SENSOR_PARAM: ${SENSOR_PARAM}"
echo --------------------

if ! grep -q "^tx_isp" /proc/modules; then
	insmod ${KMOD_PATH/%\//}/tx-isp-${SOC}.ko $ISP_PARAM
	check_return "insmod isp drv"
fi

if ! grep -q "^${SENSOR}" /proc/modules; then
	insmod ${KMOD_PATH/%\//}/sensor_${SENSOR}_${SOC}.ko $SENSOR_PARAM
	check_return "insmod sensor drv"
fi

if ! grep -q "^audio" /proc/modules; then
	insmod ${KMOD_PATH/%\//}/audio.ko spk_gpio=-1
	check_return "insmod audio"
fi

if ! grep -q "^gpio" /proc/modules; then
	insmod ${KMOD_PATH/%\//}/gpio.ko
	check_return "insmod gpio"
fi

if grep -q "^gpio" /proc/modules; then
	for GPIO in ".nightMode.irCutPin1 .nightMode.irCutPin2 .nightMode.irSensorPin .nightMode.backlightPin .audio.speakerPin"; do
		G=$(yaml-cli -g $GPIO)
		[ ! -z "$G" ] && echo $G >/proc/gpio_claim/gpio
	done
fi
