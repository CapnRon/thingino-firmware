
--- a/arch/mips/include/asm/asmmacro-32.h
+++ b/arch/mips/include/asm/asmmacro-32.h
@@ -12,7 +12,127 @@
 #include <asm/fpregdef.h>
 #include <asm/mipsregs.h>
 
-	.macro	fpu_save_double thread status tmp1=t0
+#ifdef CONFIG_CPU_MIPS32_R2
+
+	/* copy stuff from MIPS64 */
+
+	.macro  fpu_save_16even thread tmp=t0
+	cfc1    \tmp, fcr31
+	sdc1    $f0,  THREAD_FPR0(\thread)
+	sdc1    $f2,  THREAD_FPR2(\thread)
+	sdc1    $f4,  THREAD_FPR4(\thread)
+	sdc1    $f6,  THREAD_FPR6(\thread)
+	sdc1    $f8,  THREAD_FPR8(\thread)
+	sdc1    $f10, THREAD_FPR10(\thread)
+	sdc1    $f12, THREAD_FPR12(\thread)
+	sdc1    $f14, THREAD_FPR14(\thread)
+	sdc1    $f16, THREAD_FPR16(\thread)
+	sdc1    $f18, THREAD_FPR18(\thread)
+	sdc1    $f20, THREAD_FPR20(\thread)
+	sdc1    $f22, THREAD_FPR22(\thread)
+	sdc1    $f24, THREAD_FPR24(\thread)
+	sdc1    $f26, THREAD_FPR26(\thread)
+	sdc1    $f28, THREAD_FPR28(\thread)
+	sdc1    $f30, THREAD_FPR30(\thread)
+	sw  \tmp, THREAD_FCR31(\thread)
+	.endm
+
+	.macro  fpu_save_16odd thread
+	.set    push
+	.set    mips64r2
+	sdc1    $f1,  THREAD_FPR1(\thread)
+	sdc1    $f3,  THREAD_FPR3(\thread)
+	sdc1    $f5,  THREAD_FPR5(\thread)
+	sdc1    $f7,  THREAD_FPR7(\thread)
+	sdc1    $f9,  THREAD_FPR9(\thread)
+	sdc1    $f11, THREAD_FPR11(\thread)
+	sdc1    $f13, THREAD_FPR13(\thread)
+	sdc1    $f15, THREAD_FPR15(\thread)
+	sdc1    $f17, THREAD_FPR17(\thread)
+	sdc1    $f19, THREAD_FPR19(\thread)
+	sdc1    $f21, THREAD_FPR21(\thread)
+	sdc1    $f23, THREAD_FPR23(\thread)
+	sdc1    $f25, THREAD_FPR25(\thread)
+	sdc1    $f27, THREAD_FPR27(\thread)
+	sdc1    $f29, THREAD_FPR29(\thread)
+	sdc1    $f31, THREAD_FPR31(\thread)
+	.set    pop
+	.endm
+
+	.macro  fpu_save_double thread status tmp
+	.set    push
+	.set    noreorder
+	.set	hardfloat
+	sll     \tmp, \status, 31 - _ST0_FR
+	bgez    \tmp, 2f
+	 nop
+	fpu_save_16odd \thread
+2:
+	fpu_save_16even \thread \tmp
+	.set    pop
+	.endm
+
+	.macro  fpu_restore_16even thread tmp=t0
+	lw  \tmp, THREAD_FCR31(\thread)
+	ldc1    $f0,  THREAD_FPR0(\thread)
+	ldc1    $f2,  THREAD_FPR2(\thread)
+	ldc1    $f4,  THREAD_FPR4(\thread)
+	ldc1    $f6,  THREAD_FPR6(\thread)
+	ldc1    $f8,  THREAD_FPR8(\thread)
+	ldc1    $f10, THREAD_FPR10(\thread)
+	ldc1    $f12, THREAD_FPR12(\thread)
+	ldc1    $f14, THREAD_FPR14(\thread)
+	ldc1    $f16, THREAD_FPR16(\thread)
+	ldc1    $f18, THREAD_FPR18(\thread)
+	ldc1    $f20, THREAD_FPR20(\thread)
+	ldc1    $f22, THREAD_FPR22(\thread)
+	ldc1    $f24, THREAD_FPR24(\thread)
+	ldc1    $f26, THREAD_FPR26(\thread)
+	ldc1    $f28, THREAD_FPR28(\thread)
+	ldc1    $f30, THREAD_FPR30(\thread)
+	ctc1    \tmp, fcr31
+	.endm
+
+	.macro  fpu_restore_16odd thread
+	.set    push
+	.set    mips64r2
+	ldc1    $f1,  THREAD_FPR1(\thread)
+	ldc1    $f3,  THREAD_FPR3(\thread)
+	ldc1    $f5,  THREAD_FPR5(\thread)
+	ldc1    $f7,  THREAD_FPR7(\thread)
+	ldc1    $f9,  THREAD_FPR9(\thread)
+	ldc1    $f11, THREAD_FPR11(\thread)
+	ldc1    $f13, THREAD_FPR13(\thread)
+	ldc1    $f15, THREAD_FPR15(\thread)
+	ldc1    $f17, THREAD_FPR17(\thread)
+	ldc1    $f19, THREAD_FPR19(\thread)
+	ldc1    $f21, THREAD_FPR21(\thread)
+	ldc1    $f23, THREAD_FPR23(\thread)
+	ldc1    $f25, THREAD_FPR25(\thread)
+	ldc1    $f27, THREAD_FPR27(\thread)
+	ldc1    $f29, THREAD_FPR29(\thread)
+	ldc1    $f31, THREAD_FPR31(\thread)
+	.set    pop
+	.endm
+
+	.macro  fpu_restore_double thread status tmp
+	.set    push
+	.set    noreorder
+	.set	hardfloat
+	sll     \tmp, \status, 31 - _ST0_FR
+	bgez    \tmp, 1f                # 16 register mode?
+	 nop
+
+	fpu_restore_16odd \thread
+1:      fpu_restore_16even \thread \tmp
+	.set    pop
+	.endm
+
+#else
+
+	.macro  fpu_save_double thread status tmp1=t0
+	.set	push
+	.set	hardfloat
 	cfc1	\tmp1,  fcr31
 	sdc1	$f0,  THREAD_FPR0(\thread)
 	sdc1	$f2,  THREAD_FPR2(\thread)
@@ -31,6 +151,7 @@
 	sdc1	$f28, THREAD_FPR28(\thread)
 	sdc1	$f30, THREAD_FPR30(\thread)
 	sw	\tmp1, THREAD_FCR31(\thread)
+	.set	pop
 	.endm
 
 	.macro	fpu_save_single thread tmp=t0
@@ -71,6 +192,8 @@
 	.endm
 
 	.macro	fpu_restore_double thread status tmp=t0
+	.set	push
+	.set	hardfloat
 	lw	\tmp, THREAD_FCR31(\thread)
 	ldc1	$f0,  THREAD_FPR0(\thread)
 	ldc1	$f2,  THREAD_FPR2(\thread)
@@ -89,6 +212,7 @@
 	ldc1	$f28, THREAD_FPR28(\thread)
 	ldc1	$f30, THREAD_FPR30(\thread)
 	ctc1	\tmp, fcr31
+	.set	pop
 	.endm
 
 	.macro	fpu_restore_single thread tmp=t0
@@ -128,6 +252,8 @@
 	ctc1	\tmp, fcr31
 	.endm
 
+#endif  // CONFIG_CPU_MIPS32_R2
+
 	.macro	cpu_save_nonscratch thread
 	LONG_S	s0, THREAD_REG16(\thread)
 	LONG_S	s1, THREAD_REG17(\thread)
